<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Documentations on cydr</title>
    <link>https://jillianderson8.github.io/cydr/documentation/index.xml</link>
    <description>Recent content in Documentations on cydr</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Released under the GNU GPL 3.0 license</copyright>
    <lastBuildDate>Fri, 07 Apr 2017 18:17:56 -0400</lastBuildDate>
    <atom:link href="https://jillianderson8.github.io/cydr/documentation/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Documentation</title>
      <link>https://jillianderson8.github.io/cydr/documentation/</link>
      <pubDate>Fri, 07 Apr 2017 18:17:56 -0400</pubDate>
      
      <guid>https://jillianderson8.github.io/cydr/documentation/</guid>
      <description>

&lt;div class=&#34;admonition note&#34;&gt;
&lt;p class=&#34;admonition-title&#34;&gt;Note&lt;/p&gt;
&lt;p&gt;Nothing to see here, move along.&lt;/p&gt;
&lt;/div&gt;

&lt;h1 id=&#34;cydr-has-four-core-functions-which-are-used-for-cleaning-data-and-identifying-errors-the-documentation-for-these-functions-is-included-below&#34;&gt;&lt;em&gt;cydr&lt;/em&gt; has four core functions which are used for cleaning data and identifying errors. The documentation for these functions is included below.&lt;/h1&gt;

&lt;h2 id=&#34;narrow-passes&#34;&gt;&lt;code&gt;narrow_passes()&lt;/code&gt;&lt;/h2&gt;

&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;

&lt;p&gt;Adds a column called cydr_NarrowPassError to a dataframe to identify observations associated with narrow passes.&lt;/p&gt;

&lt;p&gt;Will identify all observations within narrow passes as erroneous. A pass is deemed narrow if it has an average yield less than 1-diff times that of either its neighbours.&lt;/p&gt;

&lt;h3 id=&#34;usage&#34;&gt;Usage&lt;/h3&gt;

&lt;p&gt;narrow_passes(data, remove=FALSE, passColumn=NULL, diff=0.15)&lt;/p&gt;

&lt;h3 id=&#34;arguments&#34;&gt;Arguments&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Argument&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;data&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;a data frame standardized and outputted from AgLeader.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;remove&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;a boolean. Defaults to FALSE. Indicates whether to remove identified errors.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;passColumn&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;a string or NULL. Defaults to NULL. Indicates what column specifies an observation&amp;rsquo;s pass number. If NULL the built-in helper function number_passes() will be used to assign pass numbers to each observation.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;diff&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;a numeric value between 0 and 1. Defaults to 0.15. Determines the allowable relative difference between neighbouring passes.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;value&#34;&gt;Value&lt;/h3&gt;

&lt;p&gt;A dataframe with an added column called cydr_NarrowPassError. This column will be set to TRUE if it meets the criteria for an erroneous observation.&lt;/p&gt;

&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;narrow_passes(data)
narrow_passes(data, remove=TRUE, diff=0.25) # Allows differences of up to 25%
narrow_passes(data, passColumn=&amp;quot;Pass_Num&amp;quot;) # Will use Pass_Num to number passes as th
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;passend-turns&#34;&gt;&lt;code&gt;passend_turns()&lt;/code&gt;&lt;/h2&gt;

&lt;h3 id=&#34;description-1&#34;&gt;Description&lt;/h3&gt;

&lt;p&gt;Adds a column called cydr_PassEndError to a dataframe to identify observations occurring within pass-end turns. These observations are identified by comparing two pairs of points occurring before and after the point of interest. If the difference in direction between both pairs of points is above their respective thresholds, the observation is identified as pass-end turn error.&lt;/p&gt;

&lt;p&gt;The first pair identifies whether the point is within a &amp;ldquo;short-turn&amp;rdquo;, by default checking if the points 5 before and 5 after have a difference in direction equal to or greater than 45 degrees. The second pair identifies whether the point is within a &amp;ldquo;long-turn&amp;rdquo;, by default checking whether the points 20 before and 20 after have a difference in direction of 178 degrees or greater.&lt;/p&gt;

&lt;p&gt;The thresholds used to determine short- and long-turns can all be customized using the provided arguments.&lt;/p&gt;

&lt;h3 id=&#34;usage-1&#34;&gt;Usage&lt;/h3&gt;

&lt;p&gt;pass_end_turns(data, remove=FALSE, short_angle=45, long_angle=178, short_offset =5, long_offset=20)&lt;/p&gt;

&lt;h3 id=&#34;arguments-1&#34;&gt;Arguments&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Argument&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;data&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;a data frame standardized and outputted from AgLeader.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;remove&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;a boolean. Defaults to FALSE. Indicates whether to remove identified errors.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;short_angle&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;a number between 0 and 180. Defaults to 45. Used as the angle to determine whether an observation is within a short-turn. If the difference between compared points is greater than this angle, a short-turn is identified.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;long_angle&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;a number between 0 and 180. Defaults to 178. Used as the angle to determine whether an observation is within a long-turn. If the difference between compared points is greater than this angle, a long-turn is identified.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;short_offset&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;a number greater than 0 such that short_offset &amp;lt; long_offset. Defaults to 5. Used to determine the pair of numbers which will be compared to determine whether a short-turn is occurring. For example, a short_offset of 5 will compare the point 5 prior and the point 5 past the point of interest. If the difference in these points&amp;rsquo; directions is greater than short_angle, a short-turn is occurring.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;long_offset&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;a number greater than 0 such that short_offset &amp;lt; long_offset. Defaults to 20. Used to determine the pair of numbers which will be compared to determine whether a long-turn is occurring. For example, a long_offset of 20 will compare the point 20 prior and the point 20 past the point of interest. If the difference in these points&amp;rsquo; directions is greater than long_angle, a long-turn is occurring.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;value-1&#34;&gt;Value&lt;/h3&gt;

&lt;p&gt;A data frame with an added column called cydr_PassEndError. This column will be set to TRUE if it meets the criteria for an erroneous observation.&lt;/p&gt;

&lt;h3 id=&#34;examples-1&#34;&gt;Examples&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;pass_end_turns(data)
pass_end_turns(data, remove=TRUE) # Removes all identified errors
pass_end_turns(data, long_angle=170) # Identifies differences in long_offset points
of &amp;gt; 170 as erroneous.
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;speed&#34;&gt;&lt;code&gt;speed()&lt;/code&gt;&lt;/h2&gt;

&lt;h3 id=&#34;description-2&#34;&gt;Description&lt;/h3&gt;

&lt;p&gt;Adds a column called cydr_SpeedError to a dataframe to identify observations associated with outlying speeds.&lt;/p&gt;

&lt;p&gt;Will identify all observations with speeds greater than sd standard deviations from the mean. If remove is TRUE all erroneous observations will be removed from the dataframe.&lt;/p&gt;

&lt;h3 id=&#34;usage-2&#34;&gt;Usage&lt;/h3&gt;

&lt;p&gt;speed(data, remove=FALSE, type=&amp;ldquo;both&amp;rdquo;, sd=2)&lt;/p&gt;

&lt;h3 id=&#34;arguments-2&#34;&gt;Arguments&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Argument&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;data&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;a data frame standardized and outputted from AgLeader&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;remove&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;a boolean. Defaults to FALSE. Indicates whether to remove identified errors.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;type&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;one of &amp;ldquo;high&amp;rdquo;, &amp;ldquo;low&amp;rdquo;, or &amp;ldquo;both&amp;rdquo;. Determines which types of data to identify as erroneous. &amp;ldquo;high&amp;rdquo; will identify fast speeds, &amp;ldquo;low&amp;rdquo; will identify slow speeds, and &amp;ldquo;both&amp;rdquo; will identify data associated with either fast or slow speeds.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;sd&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;a number &amp;gt;= 0. Defaults to 2. Used as the standard deviation threshold for error identification.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;value-2&#34;&gt;Value&lt;/h3&gt;

&lt;p&gt;A dataframe with an added column called cydr_SpeedError. This column will be set to TRUE if it meets the criteria for an erroneous observation.&lt;/p&gt;

&lt;p&gt;If remove = TRUE all observations cydr identifies as erroneous are removed from the returned dataframe.&lt;/p&gt;

&lt;h3 id=&#34;examples-2&#34;&gt;Examples&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;speed(data)
speed(data, type=&amp;quot;both&amp;quot;)
speed(data, FALSE, type=&amp;quot;low&amp;quot;)
speed(data, TRUE, type=&amp;quot;high&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;residual-outliers&#34;&gt;&lt;code&gt;residual_outliers()&lt;/code&gt;&lt;/h2&gt;

&lt;h3 id=&#34;description-3&#34;&gt;Description&lt;/h3&gt;

&lt;p&gt;Adds a column called cydr_ResidualError to a data frame to identify observations associated with outlying yields.&lt;/p&gt;

&lt;p&gt;Will identify all observations with yields greater than sd standard deviations away from the mean. If remove is TRUE all observations associated with a residual error will be removed from the data frame.&lt;/p&gt;

&lt;h3 id=&#34;usage-3&#34;&gt;Usage&lt;/h3&gt;

&lt;p&gt;residual_outliers(data, remove=FALSE, type=&amp;ldquo;both&amp;rdquo;, sd=2)&lt;/p&gt;

&lt;h3 id=&#34;arguments-3&#34;&gt;Arguments&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Argument&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;data&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;a data frame standardized and outputted from AgLeader&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;remove&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;a boolean. Defaults to FALSE. Indicates whether to remove identified errors.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;type&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;one of &amp;ldquo;high&amp;rdquo;, &amp;ldquo;low&amp;rdquo;, or &amp;ldquo;both&amp;rdquo;. Determines which types of data to identify as erroneous. &amp;ldquo;high&amp;rdquo; will identify fast speeds, &amp;ldquo;low&amp;rdquo; will identify slow speeds, and &amp;ldquo;both&amp;rdquo; will identify data associated with either fast or slow speeds.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;sd&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;a number &amp;gt;= 0. Defaults to 2. Used as the standard deviation threshold for error identification.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;value-3&#34;&gt;Value&lt;/h3&gt;

&lt;p&gt;A data frame with an added column called cydr_ResidualError. This column will be set to TRUE if an observation is deemed erroneous.&lt;/p&gt;

&lt;p&gt;If remove = TRUE all observations cydr identifies as erroneous are removed from the returned data frame.&lt;/p&gt;

&lt;h3 id=&#34;examples-3&#34;&gt;Examples&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;residual_outliers(data)
residual_outliers(data, TRUE)
residual_outliers(data, TRUE, type=&amp;quot;low&amp;quot;, sd=3)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>